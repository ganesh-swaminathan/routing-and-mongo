var constants = require('../constants');

var err_obj = [];

var store = {};

err_obj[constants.SUCCESS] = "Success";
err_obj[constants.CREATED] = "Created";

err_obj[constants.SEQUELIZE_DATABASE_ERROR] = "Sequelize query is wrong";
err_obj[constants.SEQUELIZE_VALIDATION_ERROR] = "Sequelize validation failed";
err_obj[constants.SEQUELIZE_FOREIGN_KEY_CONSTRAINT_ERROR] = "Sequelize Foreign Key Data not available "

err_obj[constants.CASSANDRA_DATABASE_ERROR] = "Cassandra query is wrong";
err_obj[constants.CASSANDRA_VALIDATION_ERROR] = "Cassandra validation failed";
err_obj[constants.UNDEFINED_DATABASE_ERROR] = "Error Occured";

err_obj[constants.UNDEFINED_ERROR] = "undefined error";

err_obj[constants.USER_DUPLICATION_ERROR] = "User already exist";
err_obj[constants.USER_NOT_FOUND] = "User not found";
err_obj[constants.COMPARE_PASSWORD_ERROR] = "Error occured at compare password";
err_obj[constants.PASSWORD_NOT_MATCH] = "Password did not match";
err_obj[constants.VALID_CREDENTIALS] = "Valid credentials";
err_obj[constants.EMAIL_ALREADY_EXIST] = "Oops! Given email is already in use";
err_obj[constants.INVALID_QUERY_PARAMETERS] = "Invalid query parameters";
err_obj[constants.ERROR_OCCURED_IN_GETTING_USER_LIST] = "Error occured when getting list of users";
err_obj[constants.UPDATE_DATA_ERROR] = "Could not update data";
err_obj[constants.DELETE_DATA_ERROR] = "Could not delete data";
err_obj[constants.KEY_ALREADY_USED] = "Oops! Given Key is already in use";
err_obj[constants.ERROR_OCCURED_IN_GETTING_MASTER_LIST] = "Error occured when getting list of master data";
err_obj[constants.NOT_AUTHORIZED] = "Not Authorized to access this resource";
err_obj[constants.ERROR_OCCURED_IN_AUTHORIZATION] = "Error occured while checking authorization";
err_obj[constants.VALIDATION_ERROR] = "Validation failed";
err_obj[constants.PATIENT_NOT_FOUND] = "Patient not found";
err_obj[constants.ERROR_OCCURED_IN_GETTING_PATIENT_LIST] = "Error occured when getting list of patient";
err_obj[constants.ERROR_OCCURED_IN_GETTING_PATIENT] = "Error occured when getting patient";
err_obj[constants.MISSING_LIST_OF_IDS] = "Please specify list of Ids";
err_obj[constants.EMAIL_OR_PHONE_NUMBER_ALREADY_EXIST] = "Oops! Given email or phone_number is already in use";
err_obj[constants.SENSOR_NOT_FOUND] = "Sensor number not found";
err_obj[constants.ERROR_OCCURED_IN_GETTING_PATIENT_AND_QUESTIONS] = "Error occured when getting list of patient and their questions";
err_obj[constants.ERROR_OCCURED_IN_GETTING_PATIENT_DOCTOR] = "Error occured when getting list of patient doctor associations";
err_obj[constants.QUESTION_NAME_ALREADY_EXISTS] = "Question name already exists";
err_obj[constants.ANSWER_ALREADY_EXISTS] = "Oops! Answer to this question already exists";
err_obj[constants.RESPONSE_DOES_NOT_EXISTS] = "The response you wish to update does not exists";
err_obj[constants.ERROR_OCCURED_IN_GETTING_SENSOR_LIST] = "Error occured when getting list of patient sensor associations";
err_obj[constants.PATIENT_SENSOR_ALREADY_EXISTS] = "Patient sensor association already exists";
err_obj[constants.SENSOR_ALREADY_IN_USE] = "This sensor is already in use";
err_obj[constants.EMAIL_OR_PHONE_NUMBER_MISSING] = "Opps! Please provide phone_number or email id";
err_obj[constants.ERROR_OCCURED_IN_GETTING_SESNOR_ECG_DATA] = "Error occured while fetching sensor's ecg data";
err_obj[constants.PATIENT_ID_MISSING] = "Please provide patient Id";
err_obj[constants.ERROR_OCCURED_IN_GETTING_ECG_DATA] = "Error in getting ECG data";
err_obj[constants.UNPROCESSABLE_ENTITY] = "unprocessable entity.";
err_obj[constants.TICKET_NOT_FOUND] = "Ticket does not exist.";
err_obj[constants.TICKET_ALREADY_MOVED] = "Ticket has already been moved";
err_obj[constants.ID_NOT_EXIT] = "ID does not exist.";
err_obj[constants.DEVICE_NOT_REGISTERED] = "Patient device is not registered";
err_obj[constants.ERROR_IN_SENDING_FCMNOTIFICATION] = "Error occured while sending notification";
err_obj[constants.QUESTION_CATEGORY_ALREADY_EXISTS]="Question Category Already Exists";
err_obj[constants.QUESTION_SUBCATEGORY_ALREADY_EXISTS]="Question SubCategory Already Exists";
err_obj[constants.INVALID_JSON_OBJECT] = "Invalid Json object";
err_obj[constants.WRONG_OTP] = "Wrong OTP";
err_obj[constants.ERROR_IN_SENDING_MESSAGE] ="Error occured while sending message";
err_obj[constants.RELATIVE_NUMBER_DOES_NOT_EXISTS] ="Relative number does not exists";
err_obj[constants.OTP_DOES_NOT_MATCH] ="OTP does not match";
err_obj[constants.ERROR_IN_OTP_GENERATION] ="Error in OTP generation";

store.getMessage = function (code) {
  return err_obj[code];
};

module.exports = store;
